@page "/product/create"
@page "/product/edit/{id:int}"

@inject IProductRepository _productRepository
@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
  <h3 class="card-title text-primary mb-3 ml-3">@Title Product</h3>
  @if (IsLoading)
  {
    <div class="text-center">
      <img src="/images/loading.gif"/>
    </div>
  }
  else
  {
    <div class="col-10">
      <EditForm Model="Product" OnValidSubmit="UpsertProduct">
        <DataAnnotationsValidator/>
        @*<ValidationSummary/>*@
        <div class="form-group">
          <label>Name</label>
          <InputText @bind-Value="Product.Name" class="form-control"></InputText>
          <ValidationMessage For="()=> Product.Name"></ValidationMessage>
        </div>
        <div class="form-group">
          <label>Color</label>
          <InputText @bind-Value="Product.Color" class="form-control"></InputText>
          <ValidationMessage For="()=> Product.Color"></ValidationMessage>
        </div>
        <div class="form-group">
          <label>Description</label>
          <InputTextArea @bind-Value="Product.Description" class="form-control"></InputTextArea>
          <ValidationMessage For="()=> Product.Description"></ValidationMessage>
        </div>
        <div class="row pt-3">
          <div class="form-group col-6">
            <div class="form-check">
              <InputCheckbox @bind-Value="Product.ShopFavorites" class="form-check-input"></InputCheckbox>
              <label class="form-check-label">Is Shop Favorites</label>
            </div>
          </div>
          <div class="form-group col-6">
            <div class="form-check">
              <InputCheckbox @bind-Value="Product.CustomerFavorites" class="form-check-input"></InputCheckbox>
              <label class="form-check-label">Is Customer Favorites</label>
            </div>
          </div>
          <div class="form-group col-6">
            <label class="form-check-label">Category</label>
            <InputSelect @bind-Value="Product.CategoryId" class="form-select">
              <option value="0" disabled="disabled" selected> ---Select Category---</option>
              @foreach (var category in Categories) 
              {
                <option value="@category.Id">@category.Name</option>
              }
            </InputSelect>
          </div>
        </div>
        <div class="form-group py-2">
          <button class="btn btn-primary">@Title</button>
          <NavLink href="product" class="btn btn-secondary">Back to Index</NavLink>
        </div>
      </EditForm>
    </div>
  }
</div>

@code {
  [Parameter]
  public int Id { get; set; }

  private ProductDTO Product { get; set; } = new ProductDTO();
  private IEnumerable<CategoryDTO> Categories { get; set; } = new List<CategoryDTO>();

  private string Title { get; set; } = "Create";

  public bool IsLoading { get; set; }

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      await LoadProduct();
    }
  }

  private async Task LoadProduct()
  {
    IsLoading = true;
    StateHasChanged();
    Categories = await _categoryRepository.GetAll();
    if(Id != 0)
    {
      //Update
      Title = "Update";
      Product = await _productRepository.Get(Id);
    }
    IsLoading = false;
    StateHasChanged();
  }

  private async void UpsertProduct()
  {
    if (Product.Id == 0)
    {
      //create request
      await _productRepository.Create(Product);
    }
    else
    {
      // edit request
      await _productRepository.Update(Product);
    }
    _navigationManager.NavigateTo("product");

  }

}
